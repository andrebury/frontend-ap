{"version":3,"sources":["services/auth.js","services/api.js","pages/Usuario/Login/index.js","pages/Arquivos/index.js","pages/Clientes/Lista/index.js","pages/Clientes/Cadastro/index.js","pages/Projetos/Cadastro/index.js","pages/Usuario/Cadastro/index.js","pages/Projetos/Lista/index.js","pages/Tarefas/Lista/index.js","pages/Tarefas/Cadastro/index.js","pages/Inicio/index.js","routes.js","App.js","index.js"],"names":["ehAutenticado","sessionStorage","getItem","api","axios","create","baseURL","process","Login","useState","email","setEmail","senha","setSenha","e","a","preventDefault","post","response","data","length","alert","usuario","nome","setItem","_id","token","window","location","href","useHistory","useEffect","className","onSubmit","placeholder","type","value","target","onChange","to","size","color","Arquivos","history","Clientes","clientes","setClientes","get","headers","Authorization","console","log","carregaClientes","onClick","idCliente","push","id","map","cliente","key","cliente_id","ramo","solicitantes","sol","toString","CadastroCliente","setCliente_id","setSolicitantes","setNome","setRamo","validated","setValidated","set_id","form","currentTarget","checkValidity","stopPropagation","querystring","parse","search","undefined","Titulo","Form","noValidate","Row","Group","as","Col","controlId","Label","Control","required","Feedback","md","span","offset","Button","CadastroProjetos","titulo","setTitulo","projeto_id","setProjeto_id","funcional","setFuncional","horas","setHoras","prioridade","setPrioridade","prazo","setPrazo","descricao","setDescricao","setCliente","funcsAPI","setFuncsAPI","pmsAPI","setPmsAPI","inicio","setInicio","pm","setPm","status_projeto","setStatus_projeto","observacoes","setObservacoes","idBusca","setIdBusca","clienteSelecionado","setClienteSelecionado","pmSelecionado","setPmSelecionado","funcionalSelecionado","setFuncionalSelecionado","dataSave","datasave","HandleTarefa","Tarefas","name","then","fapi","usr","filter","funcs","funcao","papi","projetos","loadInfo","cID","c","toLowerCase","pID","p","fID","f","handleFuncional","func","rows","CadastroUsuario","setFuncao","event","ListaProjetos","setProjetos","carrageProjetos","classname","projeto","show","setShow","tarefas","setTarefas","idSelecionado","setIdSelecionado","idProjeto","setIdProjeto","handleClose","t","tarefa","solicitante","fim","status","desenvolvedor","handleShow","ob","Date","dataStr","getDate","getUTCMonth","getFullYear","getHours","getMinutes","carregaTarefas","idaTar","tarefa_id","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","setTarefa_id","setSolicitante","responsavel","setResponsavel","setFim","setStatus","nomeProjeto","setNomeProjeto","responsavelSelecionado","setResponsavelSelecionado","solicitanteSelecionado","setSolicitanteSelecionado","responsaveisAPI","setResponsaveisAPI","projetoID","setProjetoID","tarefaInfo","dID","d","solres","Inicio","agenda","setAgenda","sessionid","carrageTarefas","calendarioOnClick","PrivateRoute","Component","component","rest","render","props","pathname","state","from","Routes","exact","path","CadastroClientes","CadastroTarefa","App","handleLogout","removeItem","Usuario","Navbar","bg","expand","fixed","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Text","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9695a1c0.chunk.js","sourcesContent":["const ehAutenticado = () => {\r\n    if(sessionStorage.getItem('sessionid')){\r\n        return true\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nexport default ehAutenticado;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n\t//baseURL: 'https://acompanhamento-projeto.herokuapp.com'\r\n\tbaseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport api from \"../../../services/api\";\r\nimport ehAutenticado from \"../../../services/auth\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { FiLogIn } from \"react-icons/fi\";\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState([]);\r\n    const [senha, setSenha] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const response = await api.post(\"/usuario//authenticate\", {\r\n            email: email,\r\n            senha: senha,\r\n        });\r\n\r\n        if (response.data.length !== 0) {\r\n            alert(\"Você está logado \" + response.data.usuario.nome);\r\n            sessionStorage.setItem(\"nome\", response.data.usuario.nome);\r\n            sessionStorage.setItem(\"sessionid\", response.data.usuario._id);\r\n            sessionStorage.setItem(\"Token\", response.data.token);\r\n\r\n            // history.push('/home')\r\n            window.location.href = \"/home\";\r\n        } else {\r\n            alert(\"Usuário ou senha Inválidos\");\r\n        }\r\n    }\r\n    function handleCadastro(e) {\r\n        history.push(\"/cadastro-usuario\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        function autenticado() {\r\n            if (ehAutenticado()) {\r\n                window.location.href = \"/home\";\r\n            }\r\n        }\r\n        autenticado();\r\n    }, []);\r\n    return (\r\n        <div className=\"logon-container\">\r\n            <section className=\"form\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <h1>Faça seu login</h1>\r\n                    <input\r\n                        placeholder=\"Email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Digite seu Email\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        value={senha}\r\n                        placeholder=\"Digite sua Senha\"\r\n                        onChange={(e) => setSenha(e.target.value)}\r\n                    />\r\n                    <button className=\"button\">Entrar</button>\r\n                    <Link className=\"back-link\" to=\"/cadastro-usuario\">\r\n                        <FiLogIn\r\n                            className=\"FiLogin\"\r\n                            size={16}\r\n                            color=\"#4983ee\"\r\n                        />\r\n                        Não tenho cadastro\r\n                    </Link>\r\n                </form>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nfunction Arquivos({ history }) {\r\n    return <h1>Arquivos</h1>;\r\n}\r\n\r\nexport default Arquivos;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../../services/api\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\nfunction Clientes() {\r\n    const history = useHistory();\r\n\r\n    const [clientes, setClientes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function carregaClientes() {\r\n            const response = await api.get(\"/cliente/info\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${sessionStorage.getItem(\"Token\")}`,\r\n                },\r\n            });\r\n            setClientes(response.data.clientes);\r\n            console.log(response.data.clientes);\r\n        }\r\n\r\n        carregaClientes();\r\n    }, []);\r\n\r\n    function handleEntrar(idCliente) {\r\n        if (idCliente.length > 10) {\r\n            history.push(`/cadastro-cliente?idCliente=${idCliente}`);\r\n        } else {\r\n            history.push(`/cadastro-cliente`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                Clientes{\" \"}\r\n                <Link onClick={handleEntrar}>\r\n                    <IoMdAdd color=\"#4983ee\" />\r\n                </Link>\r\n            </h1>\r\n\r\n            <table id=\"clientes\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Nome</th>\r\n                        <th>Ramo</th>\r\n                        <th>Solicitantes</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {clientes.map((cliente) => (\r\n                        <tr key={cliente._id}>\r\n                            <td>{cliente.cliente_id}</td>\r\n                            <td>\r\n                                <Link\r\n                                    to={`/cadastro-cliente?idCliente=${cliente._id}`}\r\n                                >\r\n                                    {cliente.nome}\r\n                                </Link>\r\n                            </td>\r\n                            <td>{cliente.ramo}</td>\r\n                            <td>\r\n                                {cliente.solicitantes\r\n                                    .map((sol) => \" \" + sol + \" \")\r\n                                    .toString()}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            {/* <button\r\n                type=\"button\"\r\n                className=\"button\"\r\n                name=\"tarefa\"\r\n                onClick={handleEntrar}\r\n            >\r\n                Cadastrar\r\n            </button> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Clientes;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, option, Button, Col } from \"react-bootstrap\";\nimport api from \"../../../services/api\";\nimport querystring from \"query-string\";\n\nfunction CadastroCliente() {\n    const history = useHistory();\n\n    const [cliente, setClientes] = useState(\"\");\n    const [cliente_id, setCliente_id] = useState(\"\");\n    const [solicitantes, setSolicitantes] = useState(\"\");\n    const [nome, setNome] = useState(\"\");\n    const [ramo, setRamo] = useState(\"\");\n    const [validated, setValidated] = useState(\"\");\n    const [_id, set_id] = useState(\"\");\n\n    async function handleSubmit(e) {\n        const form = e.currentTarget;\n        if (form.checkValidity() === false) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n        setValidated(true);\n        e.preventDefault();\n        const idCliente = querystring.parse(window.location.search).idCliente;\n        const data = {\n            _id,\n            cliente_id,\n            nome,\n            solicitantes,\n            ramo,\n        };\n        if (form.checkValidity() !== false) {\n            if (idCliente !== undefined) {\n                await api.post(\"/cliente/update\", data, {\n                    headers: {\n                        Authorization: `Bearer ${sessionStorage.getItem(\n                            \"Token\"\n                        )}`,\n                    },\n                });\n            } else {\n                await api.post(\"/cliente/cadastro\", data, {\n                    headers: {\n                        Authorization: `Bearer ${sessionStorage.getItem(\n                            \"Token\"\n                        )}`,\n                    },\n                });\n            }\n            history.push(`/clientes`);\n        }\n    }\n\n    useEffect(() => {\n        async function carregaClientes() {\n            const idCliente = querystring.parse(window.location.search)\n                .idCliente;\n            setCliente_id(idCliente);\n\n            if (idCliente) {\n                const response = await api.get(`/cliente/id/${idCliente}`, {\n                    headers: {\n                        Authorization: `Bearer ${sessionStorage.getItem(\n                            \"Token\"\n                        )}`,\n                    },\n                });\n                setClientes(response.data.clientes);\n                setSolicitantes(\n                    response.data.clientes.solicitantes\n                        .map((sol) => \" \" + sol + \" \")\n                        .toString()\n                );\n                setNome(response.data.clientes.nome);\n                setRamo(response.data.clientes.ramo);\n                set_id(response.data.clientes._id);\n                setCliente_id(response.data.clientes.cliente_id);\n            }\n        }\n\n        carregaClientes();\n    }, []);\n\n    function Titulo() {\n        if (cliente_id) {\n            return <h1>Atualizar Cliente {nome}</h1>;\n        } else {\n            return <h1>Cadastro Cliente </h1>;\n        }\n    }\n\n    return (\n        <>\n            <Titulo />\n\n            <Form noValidate onSubmit={handleSubmit} validated={validated}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"nome\">\n                        <Form.Label>Nome</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Nome do Cliente\"\n                            value={nome}\n                            onChange={(e) => setNome(e.target.value)}\n                            required\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Digite o Nome do Cliente\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"ramo\">\n                        <Form.Label>Ramo</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Ramo do Cliente\"\n                            value={ramo}\n                            onChange={(e) => setRamo(e.target.value)}\n                            required\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Digite o Ramo do Cliente\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"solicitantes\">\n                        <Form.Label>Solicitante</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Solicitantes\"\n                            required\n                            value={solicitantes}\n                            onChange={(e) => setSolicitantes(e.target.value)}\n                            required\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Informe os Solicitantes separados por vírgula\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Col md={{ span: 6, offset: 3 }}>\n                    <Button type=\"submit\">Salvar</Button>\n                </Col>\n                <br></br>\n            </Form>\n        </>\n    );\n}\n\nexport default CadastroCliente;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport querystring from \"query-string\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\n\r\nimport api from \"../../../services/api\";\r\n\r\nfunction CadastroProjetos() {\r\n    const history = useHistory();\r\n\r\n    const [clientes, setClientes] = useState([\"Escolha...\"]);\r\n    const [titulo, setTitulo] = useState(\"\");\r\n    const [projeto_id, setProjeto_id] = useState(\"\");\r\n    const [funcional, setFuncional] = useState(\"\");\r\n    const [horas, setHoras] = useState(0);\r\n    const [prioridade, setPrioridade] = useState(\"Média\");\r\n    const [prazo, setPrazo] = useState(\"00/00/0000\");\r\n    const [descricao, setDescricao] = useState(\"\");\r\n    const [cliente, setCliente] = useState(\"\");\r\n\r\n    const [funcsAPI, setFuncsAPI] = useState([\"Escolha...\"]);\r\n    const [pmsAPI, setPmsAPI] = useState([\"Escolha...\"]);\r\n\r\n    const [inicio, setInicio] = useState(\"00/00/0000\");\r\n    const [pm, setPm] = useState(\"\");\r\n    const [status_projeto, setStatus_projeto] = useState(\"\");\r\n    const [observacoes, setObservacoes] = useState(\"\");\r\n    const [_id, set_id] = useState(\"\");\r\n    const [idBusca, setIdBusca] = useState(\"\");\r\n    const [clienteSelecionado, setClienteSelecionado] = useState(\"\");\r\n    const [pmSelecionado, setPmSelecionado] = useState(\"\");\r\n    const [funcionalSelecionado, setFuncionalSelecionado] = useState(\"\");\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    function trataData(dataRaw) {\r\n        let dataF = new Date(dataRaw).toLocaleDateString(\"pt-BR\");\r\n\r\n        return (\r\n            dataRaw.substr(6, 4) +\r\n            \"-\" +\r\n            dataRaw.substr(3, 2) +\r\n            \"-\" +\r\n            dataRaw.substr(0, 2)\r\n        );\r\n    }\r\n\r\n    async function handleSave(e) {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        setValidated(true);\r\n        e.preventDefault();\r\n\r\n        const dataSave = {\r\n            _id: _id,\r\n            titulo: titulo,\r\n            status_projeto: status_projeto,\r\n            cliente: clienteSelecionado,\r\n            funcional: funcionalSelecionado,\r\n            horas: horas,\r\n            prioridade: prioridade,\r\n            inicio: inicio,\r\n            prazo: prazo,\r\n            descricao: descricao,\r\n            pm: pmSelecionado,\r\n            observacoes: observacoes,\r\n        };\r\n        console.log({ datasave: dataSave });\r\n\r\n        if (form.checkValidity() !== false) {\r\n            if (idBusca !== undefined) {\r\n                await api.post(\"/projeto/update\", dataSave, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${sessionStorage.getItem(\r\n                            \"Token\"\r\n                        )}`,\r\n                    },\r\n                });\r\n            } else {\r\n                await api.post(\"/projeto/cadastro\", dataSave, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${sessionStorage.getItem(\r\n                            \"Token\"\r\n                        )}`,\r\n                    },\r\n                });\r\n            }\r\n\r\n            history.push(\"/lista-projetos\");\r\n        }\r\n    }\r\n\r\n    async function HandleTarefa(e) {\r\n        history.push(`/tarefas?idBusca=${idBusca}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function loadInfo() {\r\n            await api\r\n                .get(\"/cliente/info\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${sessionStorage.getItem(\r\n                            \"Token\"\r\n                        )}`,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    setClientes(response.data.clientes);\r\n                    setClienteSelecionado(\r\n                        response.data.clientes[0] !== undefined\r\n                            ? response.data.clientes[0]._id\r\n                            : \"\"\r\n                    );\r\n                    setCliente(\r\n                        response.data.clientes[0] !== undefined\r\n                            ? response.data.clientes[0].nome\r\n                            : \"\"\r\n                    );\r\n                });\r\n\r\n            await api\r\n                .post(\r\n                    \"/userinfo/info\",\r\n                    {},\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${sessionStorage.getItem(\r\n                                \"Token\"\r\n                            )}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((response) => {\r\n                    const fapi = response.data.usr.filter(\r\n                        (funcs) => funcs.funcao === \"Funcional\"\r\n                    );\r\n                    const papi = response.data.usr.filter(\r\n                        (pm) => pm.funcao === \"PM\"\r\n                    );\r\n\r\n                    setFuncsAPI(fapi);\r\n                    setPmsAPI(papi);\r\n\r\n                    setPmSelecionado(papi[0] !== undefined ? papi[0]._id : \"\");\r\n                    setPm(papi[0] !== undefined ? papi[0].nome : \"\");\r\n\r\n                    setFuncionalSelecionado(\r\n                        fapi[0] !== undefined ? fapi[0]._id : \"\"\r\n                    );\r\n                    setFuncional(fapi[0] !== undefined ? fapi[0].nome : \"\");\r\n                });\r\n\r\n            const idBusca = querystring.parse(window.location.search).idBusca;\r\n            setIdBusca(idBusca);\r\n\r\n            if (idBusca) {\r\n                await api\r\n                    .get(`/projeto/id/${idBusca}`, {\r\n                        headers: {\r\n                            Authorization: `Bearer ${sessionStorage.getItem(\r\n                                \"Token\"\r\n                            )}`,\r\n                        },\r\n                    })\r\n                    .then((response) => {\r\n                        setTitulo(response.data.projetos.titulo);\r\n                        setStatus_projeto(\r\n                            response.data.projetos.status_projeto\r\n                        );\r\n                        setCliente(response.data.projetos.cliente);\r\n                        setFuncional(response.data.projetos.funcional);\r\n                        setHoras(response.data.projetos.horas);\r\n                        setPrioridade(response.data.projetos.prioridade);\r\n                        setInicio(response.data.projetos.inicio);\r\n                        setPrazo(response.data.projetos.prazo);\r\n                        setDescricao(response.data.projetos.descricao);\r\n                        setPm(response.data.projetos.pm);\r\n                        setObservacoes(response.data.projetos.observacoes);\r\n                        setProjeto_id(response.data.projetos.projeto_id);\r\n                        set_id(response.data.projetos._id);\r\n\r\n                        setPmSelecionado(\r\n                            response.data.projetos.pm === null ||\r\n                                response.data.projetos.pm === undefined\r\n                                ? \"\"\r\n                                : response.data.projetos.pm._id\r\n                        );\r\n                        setFuncionalSelecionado(\r\n                            response.data.projetos.funcional === null ||\r\n                                response.data.projetos.funcional === undefined\r\n                                ? \"\"\r\n                                : response.data.projetos.funcional._id\r\n                        );\r\n                        setClienteSelecionado(\r\n                            response.data.projetos.cliente === null ||\r\n                                response.data.projetos.cliente === undefined\r\n                                ? \"\"\r\n                                : response.data.projetos.cliente._id\r\n                        );\r\n\r\n                        console.log(response.data.projetos.pm);\r\n                        console.log(response.data.projetos.funcional);\r\n                        console.log(response.data.projetos.cliente);\r\n                    });\r\n            }\r\n        }\r\n        loadInfo();\r\n    }, []);\r\n\r\n    function Tarefas() {\r\n        if (_id.length > 10) {\r\n            return (\r\n                <Button type=\"button\" name=\"tarefa\" onClick={HandleTarefa}>\r\n                    Tarefas\r\n                </Button>\r\n            );\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    function Titulo() {\r\n        if (projeto_id) {\r\n            return <h1>Atualizar Projeto {titulo}</h1>;\r\n        } else {\r\n            return <h1>Cadastro Projetos </h1>;\r\n        }\r\n    }\r\n\r\n    function HandleCliente(e) {\r\n        const cID = clientes.filter(\r\n            (c) => c.nome.toLowerCase() === e.target.value.toLowerCase()\r\n        );\r\n        console.log(cID[0]._id);\r\n\r\n        setCliente(e.target.value);\r\n        setClienteSelecionado(cID[0]._id);\r\n    }\r\n\r\n    function HandlePm(e) {\r\n        const pID = pmsAPI.filter(\r\n            (p) => p.nome.toLowerCase() === e.target.value.toLowerCase()\r\n        );\r\n        console.log(pID[0]._id);\r\n\r\n        setPm(e.target.value);\r\n        setPmSelecionado(pID[0]._id);\r\n    }\r\n\r\n    function handleFuncional(e) {\r\n        const fID = funcsAPI.filter(\r\n            (f) => f.nome.toLowerCase() === e.target.value.toLowerCase()\r\n        );\r\n        console.log(fID[0]._id);\r\n\r\n        setFuncional(e.target.value);\r\n        setFuncionalSelecionado(fID[0]._id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Titulo />\r\n            </div>\r\n\r\n            <div>\r\n                <Form noValidate onSubmit={handleSave} validated={validated}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"titulo\">\r\n                            <Form.Label>Título</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder=\"Título do Projeto\"\r\n                                value={titulo}\r\n                                onChange={(e) => setTitulo(e.target.value)}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Digite o Título do Projeto\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"cliente\">\r\n                            <Form.Label>Cliente</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={HandleCliente}\r\n                                value={cliente.nome}\r\n                                required\r\n                            >\r\n                                <option>Escolha...</option>\r\n                                {clientes.map((cliente) => (\r\n                                    <option\r\n                                        key={cliente._id}\r\n                                        name={cliente._id}\r\n                                    >\r\n                                        {\" \"}\r\n                                        {cliente.nome}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Escolha o cliente\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"status_projeto\">\r\n                            <Form.Label>Status</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={status_projeto}\r\n                                onChange={(e) =>\r\n                                    setStatus_projeto(e.target.value)\r\n                                }\r\n                            >\r\n                                <option>Aprovado</option>\r\n                                <option>Desenho</option>\r\n                                <option>Desenvolvimento</option>\r\n                                <option>Testes</option>\r\n                                <option>Homologação</option>\r\n                                <option>Pós Implantação</option>\r\n                                <option>Finalizado</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"pm\">\r\n                            <Form.Label>PM</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={HandlePm}\r\n                                value={pm.nome}\r\n                            >\r\n                                <option>Escolha...</option>\r\n                                {pmsAPI.map((pm) => (\r\n                                    <option key={pm._id} name={pm._id}>\r\n                                        {\" \"}\r\n                                        {pm.nome}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"funcional\">\r\n                            <Form.Label>Funcional</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={(e) => handleFuncional(e)}\r\n                                value={funcional.nome}\r\n                            >\r\n                                <option>Escolha...</option>\r\n                                {funcsAPI.map((func) => (\r\n                                    <option key={func._id} name={func._id}>\r\n                                        {\" \"}\r\n                                        {func.nome}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"horas\">\r\n                            <Form.Label>Horas</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Horas\"\r\n                                required\r\n                                value={horas}\r\n                                onChange={(e) => setHoras(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"prioridade\">\r\n                            <Form.Label>Prioridade</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={prioridade}\r\n                                onChange={(e) => setPrioridade(e.target.value)}\r\n                            >\r\n                                <option>Alta</option>\r\n                                <option>Média</option>\r\n                                <option>Baixa</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"inicio\">\r\n                            <Form.Label>Início</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                placeholder=\"Início\"\r\n                                required\r\n                                value={inicio}\r\n                                onChange={(e) => setInicio(e.target.value)}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Escolha a data início\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"prazo\">\r\n                            <Form.Label>Prazo</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                placeholder=\"Prazo\"\r\n                                required\r\n                                value={prazo}\r\n                                onChange={(e) => setPrazo(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"descricao\">\r\n                            <Form.Label>Descrição</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows=\"5\"\r\n                                value={descricao}\r\n                                onChange={(e) => setDescricao(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"observacoes\">\r\n                            <Form.Label>Observações</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows=\"5\"\r\n                                value={observacoes}\r\n                                onChange={(e) => setObservacoes(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Button type=\"submit\">Salvar</Button>\r\n                    </Col>\r\n                    <br></br>\r\n\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Tarefas />\r\n                    </Col>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CadastroProjetos;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, option, Button, Col } from \"react-bootstrap\";\r\n\r\nimport api from \"../../../services/api\";\r\n\r\nfunction CadastroUsuario() {\r\n    const history = useHistory();\r\n\r\n    const [nome, setNome] = useState(\"\");\r\n    const [funcao, setFuncao] = useState(\"Desenvolvedor\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [senha, setSenha] = useState(0);\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    async function handleSubmit(event) {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        setValidated(true);\r\n        event.preventDefault();\r\n        //event.preventDefault();\r\n        if (form.checkValidity() !== false) {\r\n            const data = {\r\n                nome,\r\n                funcao,\r\n                email,\r\n                senha,\r\n            };\r\n\r\n            const response = await api.post(\"/usuario/cadastro\", data);\r\n            console.log(response.data);\r\n            history.push(\"/home\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <p>Cadastro Usuário</p>\r\n            </div>\r\n            <div>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} md=\"6\" controlId=\"nome\">\r\n                            <Form.Label>Nome</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder=\"Nome\"\r\n                                onChange={(e) => setNome(e.target.value)}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} md=\"6\" controlId=\"funcao\">\r\n                            <Form.Label>Função</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={(e) => setFuncao(e.target.value)}\r\n                                value={funcao}\r\n                                required\r\n                            >\r\n                                <option>Desenvolvedor</option>\r\n                                <option>PM</option>\r\n                                <option>Funcional</option>\r\n                            </Form.Control>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Escolha a Função\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} md=\"6\" controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                required\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Escreva o Email\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} md=\"6\" controlId=\"senha\">\r\n                            <Form.Label>Senha</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Senha\"\r\n                                required\r\n                                onChange={(e) => setSenha(e.target.value)}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Digite a senha\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button type=\"submit\">Cadastrar</Button>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CadastroUsuario;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport api from \"../../../services/api\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\n\r\nfunction ListaProjetos() {\r\n    const history = useHistory();\r\n\r\n    const [projetos, setProjetos] = useState([{}]);\r\n\r\n    function trataData(dataRaw) {\r\n        if (dataRaw) {\r\n            return (\r\n                dataRaw.substr(8, 2) +\r\n                \"-\" +\r\n                dataRaw.substr(5, 2) +\r\n                \"-\" +\r\n                dataRaw.substr(0, 4)\r\n            );\r\n        } else {\r\n            return \"00/00/0000\";\r\n        }\r\n    }\r\n\r\n    function handleEntrar(id) {\r\n        if (id !== undefined) {\r\n            history.push(`/cadastro-projeto?idBusca=${id}`);\r\n        }\r\n    }\r\n\r\n    function handleCadastrar() {\r\n        history.push(\"/cadastro-projeto\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function carrageProjetos() {\r\n            const response = await api\r\n                .get(\"/projeto/info\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${sessionStorage.getItem(\r\n                            \"Token\"\r\n                        )}`,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    setProjetos(response.data.projetos);\r\n                });\r\n        }\r\n        carrageProjetos();\r\n    }, []);\r\n\r\n    return (\r\n        <div classname=\"tabela-lista\">\r\n            <h1>\r\n                Lista de Projetos{\" \"}\r\n                <Link onClick={handleEntrar}>\r\n                    <IoMdAdd color=\"#4983ee\" />\r\n                </Link>\r\n            </h1>\r\n            {/* <Button type=\"button\" name=\"tarefa\" onClick={handleCadastrar}>\r\n                Cadastrar\r\n            </Button> */}\r\n\r\n            <table id=\"projetos\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Cliente</th>\r\n                        <th>Título</th>\r\n                        <th>PM</th>\r\n                        <th>Funcional</th>\r\n                        <th>Prazo</th>\r\n                        <th>Prioridade</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {projetos.map((projeto) => (\r\n                        <tr key={projeto._id}>\r\n                            <td>{projeto.projeto_id}</td>\r\n                            <td>\r\n                                {projeto.cliente === undefined ||\r\n                                projeto.cliente === null\r\n                                    ? \"\"\r\n                                    : projeto.cliente.nome}\r\n                            </td>\r\n                            <td>\r\n                                <Link\r\n                                    to={`/cadastro-projeto?idBusca=${projeto._id}`}\r\n                                >\r\n                                    {projeto.titulo}\r\n                                </Link>\r\n                            </td>\r\n                            <td>\r\n                                {projeto.pm === undefined || projeto.pm === null\r\n                                    ? \"\"\r\n                                    : projeto.pm.nome}\r\n                            </td>\r\n                            <td>\r\n                                {projeto.funcional === undefined ||\r\n                                projeto.funcional === null\r\n                                    ? \"\"\r\n                                    : projeto.funcional.nome}\r\n                            </td>\r\n                            <td>{projeto.prazo}</td>\r\n                            <td>{projeto.prioridade}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListaProjetos;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport querystring from \"query-string\";\r\nimport { IoMdAdd } from \"react-icons/io\";\r\n\r\nimport api from \"../../../services/api\";\r\n\r\nfunction Tarefas() {\r\n    const history = useHistory();\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [tarefas, setTarefas] = useState([]);\r\n    const [observacoes, setObservacoes] = useState(\"\");\r\n    const [idSelecionado, setIdSelecionado] = useState(\"\");\r\n    const [idProjeto, setIdProjeto] = useState(\"\");\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    async function handleSave(e) {\r\n        const t = tarefas.filter((tarefa) => e.target.name === tarefa._id);\r\n\r\n        console.log(\"tarefa_id \" + t[0]._id);\r\n        const data = {\r\n            _id: t[0]._id,\r\n            projeto: t[0].projeto,\r\n            observacoes: observacoes,\r\n            cliente: t[0].cliente,\r\n            titulo: t[0].titulo,\r\n            descricao: t[0].descricao,\r\n            solicitante: t[0].solicitante,\r\n            pm: t[0].pm,\r\n            funcional: t[0].funcional,\r\n            prazo: t[0].prazo,\r\n            inicio: t[0].inicio,\r\n            fim: t[0].fim,\r\n            status: t[0].status,\r\n            horas: t[0].horas,\r\n            prioridade: t[0].prioridade,\r\n            desenvolvedor: t[0].desenvolvedor,\r\n        };\r\n\r\n        const response = await api.post(\"/tarefa/update\", data, {\r\n            headers: {\r\n                Authorization: `Bearer ${sessionStorage.getItem(\"Token\")}`,\r\n            },\r\n        });\r\n        console.log(response);\r\n        console.log(data);\r\n        setShow(false);\r\n        t[0].observacoes = observacoes;\r\n    }\r\n\r\n    function handleShow(e) {\r\n        setShow(true);\r\n        setIdSelecionado(e.target.name);\r\n        console.log(\"idselect: \" + e.target.name);\r\n        const ob = tarefas.filter((tarefa) => tarefa._id === e.target.name);\r\n        const data = new Date();\r\n        const dataStr =\r\n            (data.getDate() <= 9 ? \"0\" + data.getDate() : data.getDate()) +\r\n            \"/\" +\r\n            (data.getUTCMonth() + 1 <= 9\r\n                ? \"0\" + (data.getUTCMonth() + 1)\r\n                : data.getUTCMonth() + 1) +\r\n            \"/\" +\r\n            data.getFullYear() +\r\n            \" - \" +\r\n            (data.getHours() < 10 ? \"0\" + data.getHours() : data.getHours()) +\r\n            \":\" +\r\n            (data.getMinutes() < 10\r\n                ? \"0\" + data.getMinutes()\r\n                : data.getMinutes());\r\n        setObservacoes(\r\n            (ob[0].observacoes.length > 0 ? ob[0].observacoes + \"\\n\" : \"\") +\r\n                dataStr +\r\n                \": \"\r\n        );\r\n    }\r\n\r\n    function trataData(dataRaw) {\r\n        const dataF = new Date(dataRaw);\r\n        return dataF.toLocaleDateString(\"pt-BR\");\r\n    }\r\n\r\n    function handleEntrar(idaTar) {\r\n        console.log(\"idBusca2: \" + idProjeto);\r\n        console.log(\"idaTar: \" + idaTar);\r\n\r\n        if (idaTar.length > 10) {\r\n            history.push(\r\n                `/cadastro-tarefa?idBusca=${idaTar}&idProjeto=${idProjeto}`\r\n            );\r\n        } else {\r\n            history.push(`/cadastro-tarefa?idProjeto=${idProjeto}`);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function carregaTarefas() {\r\n            const idBusca = querystring.parse(window.location.search).idBusca;\r\n            if (!idBusca) {\r\n                history.push(\"/lista-projetos\");\r\n            }\r\n            setIdProjeto(idBusca);\r\n            console.log(\r\n                \"idBusca: \" + querystring.parse(window.location.search).idBusca\r\n            );\r\n\r\n            const response = await api.post(\r\n                \"/tarefa/info\",\r\n                { projeto: idBusca },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${sessionStorage.getItem(\r\n                            \"Token\"\r\n                        )}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            setTarefas(response.data.tarefas);\r\n            console.log(response.data.tarefas);\r\n            setObservacoes(response.data.tarefas.observacoes);\r\n        }\r\n        carregaTarefas();\r\n    }, []);\r\n\r\n    return (\r\n        <div classname=\"tabela-lista\">\r\n            <h1>\r\n                Tarefas{\" \"}\r\n                <Link onClick={handleEntrar}>\r\n                    <IoMdAdd color=\"#4983ee\" />\r\n                </Link>\r\n            </h1>\r\n\r\n            <table id=\"tarefas\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Título</th>\r\n                        <th>Projeto</th>\r\n                        <th>Desenvolvedor</th>\r\n                        <th>Início</th>\r\n                        <th>Status</th>\r\n                        <th>Prioridade</th>\r\n                        <th>Observações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tarefas.map((tarefa) => (\r\n                        <tr key={tarefa._id}>\r\n                            <td>{tarefa.tarefa_id}</td>\r\n                            <td>\r\n                                <Link\r\n                                    to={`/cadastro-tarefa?idBusca=${tarefa._id}`}\r\n                                >\r\n                                    {tarefa.titulo}{\" \"}\r\n                                </Link>\r\n                            </td>\r\n                            <td>\r\n                                {tarefa.projeto === null\r\n                                    ? \"\"\r\n                                    : tarefa.projeto.titulo}\r\n                            </td>\r\n                            <td>{tarefa.desenvolvedor.nome}</td>\r\n                            <td>{tarefa.inicio}</td>\r\n                            <td>{tarefa.status}</td>\r\n                            <td>{tarefa.prioridade}</td>\r\n                            <td>\r\n                                <Link name={tarefa._id} onClick={handleShow}>\r\n                                    Escrever\r\n                                </Link>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Observações</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Escreva sua nota para a tarefa:</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"5\"\r\n                        value={observacoes}\r\n                        onChange={(e) => setObservacoes(e.target.value)}\r\n                    />\r\n\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Fechar\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        name={idSelecionado}\r\n                        onClick={handleSave}\r\n                    >\r\n                        Salvar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default Tarefas;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport querystring from \"query-string\";\r\n\r\nimport api from \"../../../services/api\";\r\n\r\nfunction Tarefas() {\r\n    const history = useHistory();\r\n\r\n    const [titulo, setTitulo] = useState(\"\");\r\n    const [tarefa_id, setTarefa_id] = useState(\"\");\r\n    const [solicitante, setSolicitante] = useState(\"\");\r\n    const [horas, setHoras] = useState(0);\r\n    const [prioridade, setPrioridade] = useState(\"Média\");\r\n    const [prazo, setPrazo] = useState();\r\n    const [descricao, setDescricao] = useState(\"\");\r\n    const [responsavel, setResponsavel] = useState(\"\");\r\n    const [inicio, setInicio] = useState();\r\n    const [fim, setFim] = useState(\"\");\r\n    const [status, setStatus] = useState(\"Desenho\");\r\n    const [_id, set_id] = useState(\"\");\r\n    const [nomeProjeto, setNomeProjeto] = useState(\"\");\r\n    const [observacoes, setObservacoes] = useState(\"\");\r\n    const [responsavelSelecionado, setResponsavelSelecionado] = useState(\"\");\r\n    const [solicitanteSelecionado, setSolicitanteSelecionado] = useState(\"\");\r\n    const [responsaveisAPI, setResponsaveisAPI] = useState([\"Escolha...\"]);\r\n    const [validated, setValidated] = useState(false);\r\n    const [projetoID, setProjetoID] = useState(\"\");\r\n    async function handleSubmit(e) {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        setValidated(true);\r\n        e.preventDefault();\r\n        const data = {\r\n            _id,\r\n            titulo,\r\n            projeto: projetoID,\r\n            solicitante: solicitanteSelecionado,\r\n            desenvolvedor: responsavelSelecionado,\r\n            inicio,\r\n            fim,\r\n            status,\r\n            prazo,\r\n            horas,\r\n            descricao,\r\n            prioridade,\r\n            observacoes,\r\n        };\r\n\r\n        if (form.checkValidity() !== false) {\r\n            if (\r\n                querystring.parse(window.location.search).idBusca !== undefined\r\n            ) {\r\n                await api.post(\"/tarefa/update\", data, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${sessionStorage.getItem(\r\n                            \"Token\"\r\n                        )}`,\r\n                    },\r\n                });\r\n            } else {\r\n                await api.post(\"/tarefa/cadastro\", data, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${sessionStorage.getItem(\r\n                            \"Token\"\r\n                        )}`,\r\n                    },\r\n                });\r\n            }\r\n            history.push(\r\n                `/tarefas?idBusca=${\r\n                    querystring.parse(window.location.search).idProjeto\r\n                }`\r\n            );\r\n        }\r\n    }\r\n\r\n    function handleResponsavel(e) {\r\n        const dID = responsaveisAPI.filter(\r\n            (d) => d.nome.toLowerCase() === e.target.value.toLowerCase()\r\n        );\r\n\r\n        setResponsavel(e.target.value);\r\n        setResponsavelSelecionado(dID[0]._id);\r\n    }\r\n\r\n    function handleSolicitante(e) {\r\n        const dID = responsaveisAPI.filter(\r\n            (d) => d.nome.toLowerCase() === e.target.value.toLowerCase()\r\n        );\r\n\r\n        setSolicitante(e.target.value);\r\n        setSolicitanteSelecionado(dID[0]._id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function loadInfo() {\r\n            await api\r\n                .post(\r\n                    \"/userinfo/info\",\r\n                    {},\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${sessionStorage.getItem(\r\n                                \"Token\"\r\n                            )}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    setResponsaveisAPI(response.data.usr);\r\n                    setResponsavelSelecionado(response.data.usr[0]._id);\r\n                    setResponsavel(response.data.usr[0].nome);\r\n\r\n                    setSolicitanteSelecionado(\r\n                        sessionStorage.getItem(\"sessionid\")\r\n                    );\r\n                    setSolicitante(sessionStorage.getItem(\"nome\"));\r\n                });\r\n\r\n            const idBusca = querystring.parse(window.location.search).idBusca;\r\n\r\n            if (idBusca) {\r\n                const tarefaInfo = await api.get(\"/tarefa/id/\" + idBusca, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${sessionStorage.getItem(\r\n                            \"Token\"\r\n                        )}`,\r\n                    },\r\n                });\r\n                setTarefa_id(tarefaInfo.data.tarefas.tarefa_id);\r\n                setNomeProjeto(tarefaInfo.data.tarefas.projeto.titulo);\r\n                setTitulo(tarefaInfo.data.tarefas.titulo);\r\n                setStatus(tarefaInfo.data.tarefas.status);\r\n                setSolicitante(tarefaInfo.data.tarefas.solicitante.nome);\r\n                setSolicitanteSelecionado(\r\n                    tarefaInfo.data.tarefas.solicitante._id\r\n                );\r\n                setHoras(tarefaInfo.data.tarefas.horas);\r\n                setPrioridade(tarefaInfo.data.tarefas.prioridade);\r\n                setInicio(tarefaInfo.data.tarefas.inicio);\r\n                setPrazo(tarefaInfo.data.tarefas.prazo);\r\n                setFim(tarefaInfo.data.tarefas.fim);\r\n                setDescricao(tarefaInfo.data.tarefas.descricao);\r\n                set_id(tarefaInfo.data.tarefas._id);\r\n                setResponsavel(tarefaInfo.data.tarefas.desenvolvedor);\r\n                setObservacoes(tarefaInfo.data.tarefas.observacoes);\r\n                setProjetoID(tarefaInfo.data.tarefas.projeto._id);\r\n            } else {\r\n                await api\r\n                    .get(\r\n                        `/projeto/id/${\r\n                            querystring.parse(window.location.search).idProjeto\r\n                        }`,\r\n                        {\r\n                            headers: {\r\n                                Authorization: `Bearer ${sessionStorage.getItem(\r\n                                    \"Token\"\r\n                                )}`,\r\n                            },\r\n                        }\r\n                    )\r\n                    .then((response) => {\r\n                        setNomeProjeto(response.data.titulo);\r\n                        setProjetoID(response.data._id);\r\n                    });\r\n            }\r\n        }\r\n        loadInfo();\r\n    }, []);\r\n\r\n    function Titulo() {\r\n        if (tarefa_id) {\r\n            return <h1>Atualizar Tarefa {titulo}</h1>;\r\n        } else {\r\n            return <h1>Cadastro Tarefa </h1>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Titulo />\r\n            </div>\r\n            <div>\r\n                <Form noValidate onSubmit={handleSubmit} validated={validated}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"titulo\">\r\n                            <Form.Label>Título</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder=\"Título da Tarefa\"\r\n                                value={titulo}\r\n                                onChange={(e) => setTitulo(e.target.value)}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Digite o Título da Tarefa\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"projeto\">\r\n                            <Form.Label>Projeto</Form.Label>\r\n                            <Form.Control type=\"text\" value={nomeProjeto} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"solicitante\">\r\n                            <Form.Label>Solicitante</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={handleSolicitante}\r\n                                value={solicitante}\r\n                            >\r\n                                {responsaveisAPI.map((solres) => (\r\n                                    <option key={solres._id} name={solres._id}>\r\n                                        {\" \"}\r\n                                        {solres.nome}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Informe o Solicitante\r\n                        </Form.Control.Feedback>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"responsavel\">\r\n                            <Form.Label>Responsável</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={handleResponsavel}\r\n                                value={responsavel.nome}\r\n                            >\r\n                                {responsaveisAPI.map((responsavel) => (\r\n                                    <option\r\n                                        key={responsavel._id}\r\n                                        name={responsavel._id}\r\n                                    >\r\n                                        {\" \"}\r\n                                        {responsavel.nome}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"horas\">\r\n                            <Form.Label>Horas</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Horas\"\r\n                                required\r\n                                value={horas}\r\n                                onChange={(e) => setHoras(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"prioridade\">\r\n                            <Form.Label>Prioridade</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={prioridade}\r\n                                onChange={(e) => setPrioridade(e.target.value)}\r\n                            >\r\n                                <option>Alta</option>\r\n                                <option>Média</option>\r\n                                <option>Baixa</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"status\">\r\n                            <Form.Label>Status</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={status}\r\n                                onChange={(e) => setStatus(e.target.value)}\r\n                            >\r\n                                <option>Desenho</option>\r\n                                <option>Aguardando GMUD</option>\r\n                                <option>Desenvolvimento</option>\r\n                                <option>Homologando</option>\r\n                                <option>Finalizado</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"inicio\">\r\n                            <Form.Label>Início</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                required\r\n                                value={inicio}\r\n                                onChange={(e) => setInicio(e.target.value)}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Defina a data de início\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"fim\">\r\n                            <Form.Label>Fim</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                value={fim}\r\n                                onChange={(e) => setFim(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"prazo\">\r\n                            <Form.Label>Prazo</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                placeholder=\"Prazo\"\r\n                                required\r\n                                value={prazo}\r\n                                onChange={(e) => setPrazo(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"descricao\">\r\n                            <Form.Label>Descrição</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows=\"5\"\r\n                                value={descricao}\r\n                                onChange={(e) => setDescricao(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"observacoes\">\r\n                            <Form.Label>Observações</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows=\"5\"\r\n                                value={observacoes}\r\n                                onChange={(e) => setObservacoes(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Button type=\"submit\">Salvar</Button>\r\n                    </Col>\r\n                    <br></br>\r\n                </Form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tarefas;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"./styles.css\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport api from \"../../services/api\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nfunction Inicio() {\r\n    const history = useHistory();\r\n\r\n    const [tarefas, setTarefas] = useState([\r\n        {\r\n            _id: \"\",\r\n            status: \"\",\r\n            prioridade: \"\",\r\n            tarefa_id: \"\",\r\n            titulo: \"\",\r\n            projeto: { titulo: \"\" },\r\n            desenvolvedor: { nome: \"\" },\r\n        },\r\n    ]);\r\n\r\n    const [observacoes, setObservacoes] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [idSelecionado, setIdSelecionado] = useState(\"\");\r\n    const [agenda, setAgenda] = useState(new Date());\r\n    const [alertas, setAlertas] = useState([]);\r\n\r\n    function trataData(dataRaw) {\r\n        const dataF = new Date(dataRaw);\r\n        return dataF.toLocaleDateString(\"pt-BR\");\r\n    }\r\n    function calendarioOnClick(e) {\r\n        console.log(e);\r\n        setAgenda(e.target);\r\n    }\r\n\r\n    function handleShow(e) {\r\n        setShow(true);\r\n        setIdSelecionado(e.target.name);\r\n        tarefas.map((tarefa) => {\r\n            if (e.target.name === tarefa._id) {\r\n                setObservacoes(tarefa.observacoes);\r\n            }\r\n        });\r\n    }\r\n\r\n    function handleEntrar(idaTar, projetoid) {\r\n        console.log(\"idBusca2: \" + projetoid);\r\n        console.log(\"idaTar: \" + idaTar);\r\n\r\n        if (idaTar.length > 10) {\r\n            history.push(\r\n                `/cadastro-tarefa?idBusca=${idaTar}&idProjeto=${projetoid}`\r\n            );\r\n        } else {\r\n            history.push(`/cadastro-tarefa?idProjeto=${projetoid}`);\r\n        }\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    async function handleSave(e) {\r\n        const t = tarefas.filter((tarefa) => e.target.name === tarefa._id);\r\n\r\n        console.log(\"tarefa_id \" + t[0]._id);\r\n        const data = {\r\n            _id: t[0]._id,\r\n            projeto: t[0].projeto,\r\n            observacoes: observacoes,\r\n            cliente: t[0].cliente,\r\n            titulo: t[0].titulo,\r\n            descricao: t[0].descricao,\r\n            solicitante: t[0].solicitante,\r\n            pm: t[0].pm,\r\n            funcional: t[0].funcional,\r\n            prazo: t[0].prazo,\r\n            inicio: t[0].inicio,\r\n            fim: t[0].fim,\r\n            status: t[0].status,\r\n            horas: t[0].horas,\r\n            prioridade: t[0].prioridade,\r\n            desenvolvedor: t[0].desenvolvedor,\r\n        };\r\n\r\n        const response = await api.post(\"/tarefa/update\", data, {\r\n            headers: {\r\n                Authorization: `Bearer ${sessionStorage.getItem(\"Token\")}`,\r\n            },\r\n        });\r\n\r\n        console.log(response);\r\n        console.log(data);\r\n        setShow(false);\r\n        t[0].observacoes = observacoes;\r\n    }\r\n\r\n    function handleShow(e) {\r\n        setShow(true);\r\n        setIdSelecionado(e.target.name);\r\n        console.log(\"idselect: \" + e.target.name);\r\n        const ob = tarefas.filter((tarefa) => tarefa._id === e.target.name);\r\n        const data = new Date();\r\n        const dataStr =\r\n            (data.getDate() <= 9 ? \"0\" + data.getDate() : data.getDate()) +\r\n            \"/\" +\r\n            (data.getUTCMonth() + 1 <= 9\r\n                ? \"0\" + (data.getUTCMonth() + 1)\r\n                : data.getUTCMonth() + 1) +\r\n            \"/\" +\r\n            data.getFullYear() +\r\n            \" - \" +\r\n            data.getHours() +\r\n            \":\" +\r\n            data.getMinutes();\r\n        setObservacoes(ob[0].observacoes + \"\\n\" + dataStr + \": \");\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function carrageTarefas() {\r\n            const sessionid = sessionStorage.getItem(\"sessionid\");\r\n\r\n            const response = await api.post(\r\n                \"/tarefa/info\",\r\n                {\r\n                    desenvolvedor: sessionid,\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${sessionStorage.getItem(\r\n                            \"Token\"\r\n                        )}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            setTarefas(response.data.tarefas);\r\n\r\n            response.data.tarefas.map((tarefa) => console.log(tarefa._id));\r\n        }\r\n        carrageTarefas();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-inicio\">\r\n                <div className=\"lista-tarefas\">\r\n                    <h1>Tarefas Pendentes do Usuário</h1>\r\n                    <table id=\"tarefas\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Título</th>\r\n                                <th>Projeto</th>\r\n                                <th>Prazo</th>\r\n                                <th>Observações</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tarefas.map((tarefa) => (\r\n                                <tr key={tarefa._id}>\r\n                                    <td>{tarefa.tarefa_id}</td>\r\n                                    <td>\r\n                                        <Link\r\n                                            to={`/cadastro-tarefa?idBusca=${tarefa._id}`}\r\n                                        >\r\n                                            {tarefa.titulo}\r\n                                        </Link>\r\n                                    </td>\r\n                                    <td>{tarefa.projeto.titulo}</td>\r\n                                    <td>{tarefa.prazo}</td>\r\n                                    <td>\r\n                                        <Link\r\n                                            name={tarefa._id}\r\n                                            onClick={handleShow}\r\n                                        >\r\n                                            Escrever\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <Modal show={show} onHide={handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Observações</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Escreva sua nota para a tarefa:</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows=\"5\"\r\n                                value={observacoes}\r\n                                onChange={(e) => setObservacoes(e.target.value)}\r\n                            />\r\n\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Fechar\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                name={idSelecionado}\r\n                                onClick={handleSave}\r\n                            >\r\n                                Salvar\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div className=\"container-direita\">\r\n                    <div className=\"alertas\">\r\n                        <h1>Alertas</h1>\r\n                        <span>adicionar : </span>\r\n                        <input></input>\r\n                        <button>Adicionar</button>\r\n                    </div>\r\n                    <div className=\"calendario\">\r\n                        <h1>Agenda</h1>\r\n\r\n                        <Calendar\r\n                            className=\"Calendar\"\r\n                            onChange={(e) => calendarioOnClick(e)}\r\n                            value={agenda}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Inicio;\r\n","import { BrowserRouter, Switch, Route , Redirect} from 'react-router-dom';\r\nimport React from 'react';\r\nimport ehAutenticado from './services/auth'\r\nimport Login from './pages/Usuario/Login';\r\nimport Arquivos from './pages/Arquivos';\r\nimport Clientes from './pages/Clientes/Lista';\r\nimport CadastroClientes from './pages/Clientes/Cadastro';\r\n\r\nimport CadastroProjetos from './pages/Projetos/Cadastro';\r\nimport CadastroUsuario from './pages/Usuario/Cadastro';\r\n\r\nimport ListaProjetos from './pages/Projetos/Lista';\r\nimport Tarefas from './pages/Tarefas/Lista';\r\nimport CadastroTarefa from './pages/Tarefas/Cadastro';\r\nimport Inicio from './pages/Inicio';\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest }) => (\r\n    <Route { ...rest } render={props => (\r\n        ehAutenticado() ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to={{pathname: '/', state: { from: props.location } }} />\r\n        )\r\n    )} />\r\n    )\r\n\r\nconst Routes = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Login} />\r\n                <PrivateRoute path=\"/arquivos\" component={Arquivos} />\r\n                <PrivateRoute path=\"/clientes\" component={Clientes} />\r\n                <PrivateRoute path=\"/cadastro-cliente\" component={CadastroClientes} />\r\n\r\n                <Route path=\"/cadastro-usuario\" component={CadastroUsuario} />\r\n\r\n                <PrivateRoute path=\"/cadastro-projeto\" component={CadastroProjetos} />\r\n                <PrivateRoute path=\"/lista-projetos\" component={ListaProjetos} />\r\n                <PrivateRoute path=\"/projetos/:projeto_id\" component={ListaProjetos} />\r\n\r\n\r\n                <PrivateRoute path=\"/tarefas\" component={Tarefas} />\r\n                <Route path=\"/cadastro-tarefa\" component={CadastroTarefa} />\r\n\r\n                <PrivateRoute path=\"/home\" component={Inicio} />\r\n            </Switch>\r\n        \r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport Routes from \"./routes\";\r\n\r\nfunction App() {\r\n  const [nome, setNome] = useState(\"\");\r\n  function handleLogout(e) {\r\n    sessionStorage.removeItem(\"sessionid\");\r\n    sessionStorage.removeItem(\"nome\");\r\n  }\r\n  sessionStorage.getItem(\"nome\");\r\n\r\n  function loadInfo() {\r\n    setNome(sessionStorage.getItem(\"nome\"));\r\n  }\r\n  useEffect(() => {\r\n    loadInfo();\r\n  }, []);\r\n\r\n  const Usuario = () => {\r\n    if (nome !== null) {\r\n      return (\r\n        <>\r\n          Usuário:{\" \"}\r\n          <a onClick={handleLogout} href=\"/\">\r\n            {nome}\r\n          </a>\r\n        </>\r\n      );\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <Navbar bg=\"light\" expand=\"xl\" fixed=\"top\">\r\n          <Navbar.Brand href=\"/home\">\r\n            <h3>Acompanhamento de Projetos</h3>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/home\">Início</Nav.Link>\r\n              <NavDropdown title=\"Projetos\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/cadastro-projeto\">\r\n                  Novo Projeto\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/lista-projetos\">\r\n                  Lista Projetos\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link href=\"/arquivos\">Arquivos</Nav.Link>\r\n              <Nav.Link href=\"/clientes\">Clientes</Nav.Link>\r\n              <Nav.Link href=\"/relatorio\">Relatorios</Nav.Link>\r\n            </Nav>\r\n            {/* <Form inline onSubmit={handlesubmit}>\r\n            <FormControl \r\n              type=\"text\" \r\n              placeholder=\"Buscar Projeto\" \r\n              className=\"mr-sm-2\"\r\n              onChange={handleChange}/>          \r\n              <Button variant=\"outline-success\" type=\"submit\">Buscar</Button>     \r\n          </Form> */}\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n              <Navbar.Text>\r\n                <Usuario />\r\n              </Navbar.Text>\r\n            </Navbar.Collapse>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <div className=\"content\">\r\n          <Routes />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}